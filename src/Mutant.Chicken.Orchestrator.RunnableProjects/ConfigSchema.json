{
  "$schema": "http://json-schema.org/draft-04/schema",
  "definitions": {
    "globbingPattern": {
      "type": "string",
      "description": "A globbing pattern"
    },
    "includePatterns": {
      "type": "array",
      "description": "A set of globbing patterns that, when matched, include a file for processing",
      "items": { "$ref": "#/definitions/globbingPattern" }
    },
    "excludePatterns": {
      "type": "array",
      "description": "A set of globbing patterns that, when matched, exclude files from processing, these supersede any include patterns",
      "items": { "$ref": "#/definitions/globbingPattern" }
    },
    "parameter": {
      "type": "object",
      "description": "Information about how a parameter should be handled",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the property"
        },
        "isName": {
          "type": "boolean",
          "description": "Whether or not this corresponds to the value of the name parameter from the broker",
          "default": false
        },
        "type": {
          "enum": ["string", "int", "bool"],
          "default": "string"
        },
        "defaultValue": {"type": "string"},
        "requirement": {
          "enum": [
            "required",
            "suggested",
            "optional",
            "addOn",
            "implicit"
          ],
          "default": "optional",
          "description": "The requiredness of the parameter"
        },
        "isVariable": {
          "type": "boolean",
          "description": "Whether or not this property should be treated as a variable for evaluations",
          "default": false
        }
      }
    },
    "config": {
      "type": "object",
      "properties": {
        "conditionals": { "$ref": "#/definitions/conditionals" },
        "variables": { "$ref": "#/definitions/variables" },
        "replacements": { "$ref": "#/definitions/replacements" }
      }
    },
    "conditionals": {
      "type": "object",
      "properties": {
        "if": { "type": "string" },
        "else": { "type": "string" },
        "elseif": { "type": "string" },
        "endif": { "type": "string" },
        "evaluator": {
          "type": "string",
          "enum": [ "C++" ]
        }
      },
      "required": [ "if", "else", "elseif", "endif", "evaluator" ]
    },
    "variables": {
      "type": "object",
      "properties": {
        "sourceOrder": {
          "type": "array",
          "items": {
            "enum": [ "environment", "user", "executor" ]
          },
          "minItems": 0,
          "maxItems": 3,
          "uniqueItems": true
        },
        "pattern": { "type": "string" },
        "expand": { "type": "boolean" }
      }
    },
    "replacements": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    }
  },
  "type": "object",
  "description": "A configuration file for runnable project based templates",
  "properties": {
    "$schema": {
      "type": "string",
      "pattern": "^.*/ConfigSchema.json(?:#?)$"
    },
    "name": { "type": "string" },
    "defaultName": { "type": "string" },
    "description": { "type": "string" },
    "include": { "$ref": "#/definitions/includePatterns" },
    "exclude": { "$ref": "#/definitions/excludePatterns" },
    "parameters": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/parameter" }
    },
    "config": { "$ref": "#/definitions/config" },
    "special": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "config": { "$ref": "#/definitions/config" },
          "exclude": { "$ref": "#/definitions/excludePatterns" }
        }
      }
    }
  },
  "required": [ "$schema", "name", "defaultName" ]
}
